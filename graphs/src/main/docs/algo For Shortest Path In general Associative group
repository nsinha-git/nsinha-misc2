1. Shortest path is min of all paths that can lead from src ‚Üù dest
2. but a path is defined as connected group edges.
3. If cycles are disallowed a greedy algorithm exist for any src-dest pair as all yo need is tree traversal from src, till you visit
the dest from all possible paths and pick the minimum one. Is minimu well defined in a group
4. What about edge cycles. You can keep keep coming and back and forth to same edge by cycles and there are infinity of paths.
If negative path cycles does exist then, we can also keep decrementing the path cost. So how to define min paths.
5. Min path is well defined if cyclical graph has no negative cycles.
6. How a greedy algo like dikstra work when edges have negative values. If no negative cycles exist dikstra will work just fine.
7. But if cycles of negative weight do exist then  to easily find existence of negative cycles by looking at just the immediate neighbors
a V cylce Dijstra loop should be run called bellman ford algorithm.




------------------------------
How a group can effectively define existence of min. And does every group can define it.

A group of finite elements can always have a min uniquely defined by selecting a definite order.

What about infinite groups? If we can again define a minimum element then problem resolves itself

What if we can not define a min element. Then we have no way of getting to shortest path as in above.
Negative cycles lead to that situation. Non negative cycles are still fine as values at nodes will still be positive.

-------------------------------
path algorithms interestingly also introduce one more important concept in the way we  push the edge weights  to nodes.
So a a graph with edges and nodes can be transformed to a graph of only  nodes in a way. This is an important result and can  be used in some
concept of ordering like topological ordering.


